
%import common.DIGIT
%import .dates.DATE
%import .tenors (FLOAT_TENOR, QUARTERLY_IMM_TENOR, IMM_TENOR, YEAR_INT)
%import .numbers (INT, SIGNED_FLOAT, FULL_SIGNED_FLOAT)

// **********************************
// STRIKE
// **********************************

STRIKE_BP: SIGNED_FLOAT
FULL_STRIKE_BP: FULL_SIGNED_FLOAT

STRIKE_PCT: SIGNED_FLOAT
FULL_STRIKE_PCT: FULL_SIGNED_FLOAT

IS_RELATIVE: "A"
_relative_strike: IS_RELATIVE FULL_STRIKE_BP


// **********************************
// TIME
// **********************************

?time: DATE | FLOAT_TENOR | QUARTERLY_IMM_TENOR
?full_time: DATE | FLOAT_TENOR | IMM_TENOR

_TIME_SEP: "S"
_double_years: YEAR_INT _TIME_SEP YEAR_INT _TIME_SEP
_triple_years: YEAR_INT _TIME_SEP YEAR_INT _TIME_SEP YEAR_INT _TIME_SEP

// **********************************
// BASIS
// **********************************

TENOR_FREQ: "1D" | "1S" | "3S" | "6S" | "12S"
basis: TENOR_FREQ

// **********************************
// SIZE
// **********************************

 _SEP: "/"

// NOTE: I had to define the notional as a regex pattern because the notional must be resolved in a greedy way
NOTIONAL_NUMBER: /[-]?(0|[1-9][0-9]*)([.](25|75|[0-9]{1}))?/
NOTIONAL_UNIT: "T" | "B" | "M" | "K"

size: NOTIONAL_NUMBER NOTIONAL_UNIT?
_double_sizes: size _SEP size
_triple_sizes: size _SEP size _SEP size

IS_RISK: "R"
